{{>header}}
<h1>Logged in as {{displayName}}</h1>
<div class="media">
    <div class="pull-left">
        <img class="media-object" width="150" src="{{profilePicture}}" />
    </div>
    <div class="media-body">
        <dl class="dl-horizontal">
            <dt>Display name</dt><dd class="clearfix">{{displayName}}</dd>
            <dt>Id</dt><dd>{{id}}</dd>
            <dt>Email</dt><dd>{{email}}</dd>
            <dt>Spotify URI</dt><dd><a href="{{externalUrl}}">{{externalUrl}}</a></dd>
            <dt>Link</dt><dd><a href="{{href}}">{{href}}</a></dd>
            <dt>Profile Image</dt><dd class="clearfix"><a href="{{profilePicture}}">{{profilePicture}}</a></dd>
            <dt>Country</dt><dd>{{country}}</dd>
        </dl>
    </div>
</div>
<h2>oAuth info</h2>
<dl class="dl-horizontal">
    <dt>Access token</dt><dd class="text-overflow">{{accessToken}}</dd>
    <dt>Refresh token</dt><dd class="text-overflow">{{refreshToken}}</dd>
</dl>
<a href="/refresh_token">
    <button class="btn btn-default" id="obtain-new-token">
        Obtain new token using the refresh token
    </button>
</a>
<div>
    <form action="" method="post">
        <label for="query">Look for Artist, Album or Track:</label>
        <input id="query" name="query" type="search" placeholder="The National, Where is her head, etc.">
        <input type="submit" formmethod="post">
    </form>
</div>
<script>
    window.onSpotifyWebPlaybackSDKReady = () => {
      const token = '{{accessToken}}';
      const player = new Spotify.Player({
        name: 'Reproductor bien cool',
        getOAuthToken: cb => { cb(token); }
      });

      // Error handling
      player.addListener('initialization_error', ({ message }) => { console.error(message); });
      player.addListener('authentication_error', ({ message }) => { console.error(message); });
      player.addListener('account_error', ({ message }) => { console.error(message); });
      player.addListener('playback_error', ({ message }) => { console.error(message); });

      // Playback status updates
      player.addListener('player_state_changed', state => { console.log(state); });

      // Ready
      player.addListener('ready', ({ device_id }) => {
        console.log('Ready with Device ID', device_id);
      });

      // Not Ready
      player.addListener('not_ready', ({ device_id }) => {
        console.log('Device ID has gone offline', device_id);
      });

      // Connect to the player!
      player.connect();
    };
</script>
<script src="https://sdk.scdn.co/spotify-player.js"></script>
{{>footer}}